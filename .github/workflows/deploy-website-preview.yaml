name: Deploy website to preview
run-name: ${{ github.actor }} is deploying website to vercel preview

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/deploy-website-preview.yaml
      - '!CHANGELOG.md'
      - website/**
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_GH_TOKEN }}
          release-type: simple

  deploy-to-preview:
    runs-on: ubuntu-latest
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set environment and install dependencies
        uses: ./.github/actions/prepare

      - name: Install Vercel CLI
        uses: ./.github/actions/install-vercel-cli

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NEXT_PUBLIC_CONTENTFUL_SPACE_ID: ${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }}
          NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN }}
          NEXT_PUBLIC_GIVEBUTTER_API_KEY: ${{ secrets.NEXT_PUBLIC_GIVEBUTTER_API_KEY }}

      - name: Deploy project artifacts to Vercel
        id: deploy
        run: echo "url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
  ci-validation:
    name: CI validation
    needs: [release-please, deploy-to-preview]
    if: ${{ always() }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Check jobs for errors
        uses: actions/github-script@v7
        with:
          script: |
            const checkJobsForErrors = require('./.github/workflows/js/check-for-errors.js');
            const jobs = ${{ toJSON(needs) }};
            checkJobsForErrors({ core, jobs });
